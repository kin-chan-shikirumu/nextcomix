<%= stylesheet_link_tag "show", media: "all" %>

<div class="main">
<h1><p><%= @tweet.title %></p> </h1>
<div class="tweet">
  <div class="tweet-image">
    <%= image_tag @tweet.image, width: 250 %>
  </div>
  <h4>ジャンル</h4>
  <div class="genre">
    <% @tweet.tags.each do |tag| %>
      <ol>＃<span><%= tag.name %></span></ol>
    <% end %><br>
  </div>
  <h4>あらすじ</h4>
  <p><%= @tweet.about %></p>
  <h4>おすすめポイント！</h4>
  <p><%= @tweet.body %></p>
  <table>

  <h4>作者</h4>
  <p><%= @tweet.author %></p>
  <h4>連載状況</h4>
  <p><%= @tweet.serialization %></p>
  <h4>累計発行部数</h4>
  <p><%= @tweet.circulationtotal %></p>
  <h4>受賞など</h4>
  <p><%= @tweet.award %></p>
  <h4>この作品を無料で読めるアプリ</h4>
  <p><%= @tweet.app %></p>
  <% if reader_signed_in? && current_reader.email == ENV['ADMIN_EMAIL'] %> 
    <%= link_to "編集", edit_tweet_path(@tweet.id) %>
  <% end %><br>
</div>

<% if reader_signed_in? %>
      <% if current_reader.already_liked?(@tweet) %>
          <%= button_to tweet_like_path(id: @tweet.id, tweet_id: @tweet.id), data: { turbo_method: :delete } do %>
              <i class="fa-solid fa-thumbs-up"></i><%= @tweet.likes.count %>
          <% end %>
      <% else %>
          <%= button_to tweet_likes_path(id: @tweet.id, tweet_id: @tweet.id), data: { turbo_method: :post }  do %>
              <i class="fa-solid fa-thumbs-up"></i><%= @tweet.likes.count %>
          <% end %>
      <% end %>
<% else %>
      <i class="fa-solid fa-thumbs-up"></i><%= @tweet.likes.count %>
<% end %><br>

<p><h4>読者みんなの「好きな巻」グラフ！</h4></p>
<canvas id="voteChart" width="1065" height="532" style="display: block; box-sizing: border-box; height: 355px; width: 710px;"></canvas>

<h3>いいねした読者</h3>
<% @tweet.liked_readers.each do |reader| %>
  <li><%= reader.email %></li>
<% end %>

<div class="comment-wrapper">
  <h3><p>読者の「ナマの声」</p></h3>
  <% @comments.each do |c| %>
    <div class="comment">
      <div class="left-container">
        <%= c.reader.email unless c.reader.blank? %><br>
        <%= c.content %>
      </div>
      <div id="comment-<%= c.id %>-rating"></div>
      <div class="right-container">
        <% if reader_signed_in? && current_reader.id == c.reader_id %>
          <%= button_to "削除", tweet_comment_path(c.tweet.id, c.id), method: :delete %>
        <% end %> 
        <p><%= c.created_at %></p>
      </div>
    </div>
      <br>
  <% end %>

  <% if reader_signed_in? %>
    <div id="rating-form">
      <%= form_with(model: [@tweet, @comment], local: false, id: "commentForm") do |f| %>
      <p>評価</p>
        <%= f.hidden_field :rate, value: 0, id: "comment_rate" %>
        <p>「何巻が好き？」を投票</p>
        <div class="volume-number">
          <div id="volume-buttons">
            <% (1..@tweet.volume).each do |volume| %>
              <button type="button" class="vote-button" data-volume="<%= volume %>">
                <%= volume %>巻
              </button>
            <% end %>
          </div>
        </div>
        <%= f.hidden_field :vote_volume, id: "selectedVolume" %>
        <%= f.label :content, "コメント" %>
        <%= f.text_area :content, :size => "60x5"  %>
        <p>※誹謗中傷などは削除される可能性がございます。</p>
        <%= button_tag type: "submit" do %>
          <i class="far fa-comments"></i> コメント投稿
        <% end %>
      <% end %>
    </div>
  <% end %>
</div>


<!-- Chart.js の読み込み -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  // 投票ボタン -> hidden_field に値を入れる
  document.addEventListener("DOMContentLoaded", function() {
    const buttons = document.querySelectorAll(".vote-button");
    const hiddenInput = document.getElementById("selectedVolume");

    buttons.forEach(button => {
      button.addEventListener("click", function() {
        buttons.forEach(btn => btn.classList.remove("selected"));
        this.classList.add("selected");
        hiddenInput.value = this.dataset.volume;
      });
    });
  });

  // グラフ描画用のコード
  document.addEventListener("DOMContentLoaded", function() {
    // コントローラで作成した集計結果を JS のオブジェクトに変換
    var voteData = <%= raw @vote_results.to_json %>;
    
    var ctx = document.getElementById('voteChart').getContext('2d');
    new Chart(ctx, {
      type: 'bar',
      data: {
        labels: Object.keys(voteData).map(v => v + "巻"),
        datasets: [{
          label: '投票数',
          data: Object.values(voteData),
          backgroundColor: 'rgb(255, 236, 225)',
          borderColor: 'rgb(255, 94, 0)',
          borderWidth: 1
        }]
      },
      options: {
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOMContentLoaded イベント発火");

    const ratingForm = document.getElementById("rating-form");
    if (ratingForm && !ratingForm.dataset.ratyInitialized) {
      console.log("ratingForm に Raty を適用");
      new Raty(ratingForm, {
        starOn: "<%= asset_path('star-on.png') %>",
        starOff: "<%= asset_path('star-off.png') %>",
        starHalf: "<%= asset_path('star-half.png') %>",
        scoreName: "comment[rate]"
      });
      ratingForm.dataset.ratyInitialized = "true";
    }

    const comments = <%= raw(@comments.map { |c| { id: c.id, rate: c.rate || 0 } }.to_json) %>;
    comments.forEach(comment => {
      const commentRatingElement = document.getElementById(`comment-${comment.id}-rating`);
      if (commentRatingElement && !commentRatingElement.dataset.ratyInitialized) {
        console.log(`comment-${comment.id}-rating に Raty を適用`);
        new Raty(commentRatingElement, {
          starOn: "<%= asset_path('star-on.png') %>",
          starOff: "<%= asset_path('star-off.png') %>",
          starHalf: "<%= asset_path('star-half.png') %>",
          readOnly: true,
          score: comment.rate
        });
        commentRatingElement.dataset.ratyInitialized = "true";
      }
    });
  });
</script>

<%= link_to "作品一覧に戻る", tweets_thumb_path %>
</div>